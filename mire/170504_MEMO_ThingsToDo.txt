
그 Num. Lec. Notes 보면서 할일
- 모두 공부할 수는 있으나 최소한 순차적으로 하지는 말자. 기초적인 거 하고, 하고 싶은 것부터 야금야금
- 각 장마다 다음을 하자
 - 코드의 줄줄 마다 그걸 왜 그렇게 했는지 이해하고
 - 필요하다면 바꿔보면서 효과를 이해한다.
 - 시각화는 필수이다. 시각화는 주로 python을 이용하자.
 - 최적화를 더 할 수 있도록 노력하자. 예시 코드보다는 더 빠르게. 시간 재는 법도 알아내서 해보자. 시간 기록도 해보자. 예시코드 속도와 내가 최적화 시킨 코드 속도를 모두 기록한다.
 - 컴공 때 배운 걸 계속 생각하면서 하자. 어셈블리 수준에서 어떻게 되는지 등을 해볼 수도 있겠다. 적어도 포인터 연산 등을 많이 사용하자.
 - 프로젝트 몇 개 안되서, 프로젝트마다 Makefile 만들어 사용하자.
 - C++로으 변환까지 하는 건, 효율상 아직 아닌 것 같다. 이건 C++을 배우고 하는 게 좀 더 낫지 않을까 싶다.

공통 할일
- 최신 GCC를 컴파일해서 사용하자. PATH에 추가해서 사용해도 되고 아니면 MAKEFILE만들어서 해도 되고.
- 여러 번 실행하고 각각 시간 재는 걸 하는 등, 자동으로 성능 측정해주는 코드도 만들어 쓰자.

끝날즈음
- Thijssen 책 내용을 보자.
- Bibliography section 에서 추가적으로 공부할 만한 책들을 선별하자


